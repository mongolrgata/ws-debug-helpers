function createBrowserRecordSet( self, applet ){
   var idsStr = applet.getScanFiles(),
      ids = idsStr.split( ',' ),
      records = [];

   for( var i in ids ){
      if(ids.hasOwnProperty(i))
         records[i] = new $ws.proto.Record({
            row: [ids[i], 'Скан ' + ( parseInt(i, 10) + 1 )],
            colDef: {
               '@Идентификатор': { type : "Идентификатор", title: "@Идентификатор", index: 0 },
               'Название': { type : "Текст", title: "Название", index: 1 }
            },
            pkValue: ids[i]
         });
   }
   // Создадим RecordSet и инициализируем его
   var recordSet = new $ws.proto.RecordSetStatic({
      defaultColumns: {
         '@Идентификатор': { type : "Идентификатор", title: "@Идентификатор", index: 0 },
         'Название': { type : "Текст", title: "Название", index: 1 }
      },
      records: records
   });
   // Положим все в браузер
   self.setData( recordSet );
   self.setActiveRow( self.getContainer().find( 'tr[rowkey="'+ids[ids.length - 1]+'"]' ) );
}

function initializeWindow( windows, applet ) {
   // Теперь инициализируем список сканеров
   var scanners = applet.getDeviceNames().split( ',' ),
       lastScanner = applet.getLastSelectedDevice(),
       data = {};
   for( var i in scanners ){
      if(scanners.hasOwnProperty(i))
         data[i] = scanners[i];
   }
   var popup = windows.getChildControlByName( 'Сканеры' );
   if( !Object.isEmpty(data) ){
      popup.setData( data );
      if( !lastScanner ) {
         popup.setValue( 0 );
         applet.selectDevice( data[0] );
      } else {
         var value = popup.getKeyByValue( lastScanner );
         popup.setValue( !value ? 0 : value );
         applet.selectDevice( !value ? data[0] : data[value] );
      }
   } else {
      popup.setData( { "-1" : "Нет доступных сканеров" } );
   }
   if( popup.getValue() < 0 )
      windows.getChildControlByName( 'Сканировать' ).setEnabled( false );
   else if( applet.addNewScan() ) {
      createBrowserRecordSet( windows.getChildControlByName( "ScanStack" ), applet );
      windows.getChildControlByName( "Загрузить на сервер" ).setEnabled( true )
   }

}

function getApplet( self ) {
   return self.getLinkedContext().getValue( 'scannerApplet' );
}

function setEnabled( self, name, value ){
   self.getParentWindow().getChildControlByName( name ).setEnabled( value );
}

hdl = {
   onChangeScanner: function(event, value){
      getApplet(this).selectDevice( ( value == -1 ) ? "" : this.getStringValue( value ) );
      setEnabled( this, "Сканировать", value != -1 );
   },

   onButtonScanner: function(){
      var applet = getApplet(this ),
          countScan = this.getParentWindow().getChildControlByName( "ScanStack" ).getRecordSet().getRecordCount();
      if( countScan >= 1 ? applet.addNewScan() : applet.scan() ) {
         createBrowserRecordSet( this.getParentWindow().getChildControlByName( "ScanStack" ), applet );
         setEnabled( this, "Загрузить на сервер", true );
      }
   },

   onButtonUpload: function(){
      getApplet(this).upload();
   },

   onSetCursor : function( event, row, dataRow ){
      getApplet( this ).showImage( dataRow.getKey() );
   },

   onDelStarted: function( event, records ) {
      event.setResult( false );
      var curr_rs = this.getRecordSet();
      for( var i = 0, len = records.length; i < len; i++ ) {
         if( getApplet(this).deleteScan( records[i].getKey() ) );
            curr_rs.deleteRecord( records[i].getKey() );
      }
      this.reload();
   },

   onAfterLoad : function(){
      var self = this,
         button = this.getLinkedContext().getValue( 'FileScanner' );

      // Поставим картинку поиска сканеров, пока грузится апплет
      var div = self.getChildControlByName( 'Сканеры' ).getContainer().find( '.custom-select' );
      div.find('.custom-select-text').css( "float", "left" );
      div.append( $('<img src="' + $ws._const.wsRoot + 'img/ajax-loader-small.gif" class="ws-load-indicator" style="float:right; margin-right:16px;">') );

      $ws.java.runApplet( "scannerApplet", {
         element: this._container.find( '#scanApplet' ),
         idControl: button.getId(),
         sendSingleFile: !button._options.createZip + "",
         needContentShow: "true"
      }, false ).addCallback(function(applet){
         button._applet = applet;
         button._notify( "onAppletReady", button.getId(), button._applet );
         self.getLinkedContext().setValue( 'scannerApplet', applet );
         initializeWindow( self, applet );
         div.find('.ws-load-indicator').remove();
         return true;
      }).addErrback( function( error ){
         div.find('.ws-load-indicator').remove();
         self.getChildControlByName( 'Сканеры' ).setData( { "-1" : "Нет доступных сканеров" } );
         button._applet = null;
         button._notify( "onAppletReady", self._id, button._applet, error );
         $ws.single.ioc.resolve('ILogger').error('FileScanner', error.message || "Апплету сканирования не удалось корректно запуститься!" );
         $ws.core.alert( "Апплету сканирования не удалось корректно запуститься!", "", "error" );
         return false;
      });
   }
};